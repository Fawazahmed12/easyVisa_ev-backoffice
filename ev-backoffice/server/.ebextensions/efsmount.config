packages:
  yum:
    amazon-efs-utils: [ ]

commands:
  01_mount:
    command: "/tmp/mount-efs.sh"
  02_sysprep:
    command: "/tmp/sysconfig.sh"

files:
  "/tmp/mount-efs.sh":
    mode: "000755"
    content: |
      #!/bin/bash

      EFS_MOUNT_DIR=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_MOUNT)
      EFS_MOUNT_POINT_SOURCE=$(/opt/elasticbeanstalk/bin/get-config environment -k EFS_SOURCE)

      echo "Mounting EFS filesystem ${EFS_MOUNT_POINT_SOURCE} to directory ${EFS_MOUNT_DIR} ..."

      echo 'Stopping NFS ID Mapper...'
      service rpcidmapd status &> /dev/null

      if [ $? -ne 0 ] ; then
        echo 'rpc.idmapd is already stopped!'
      else
        service rpcidmapd stop
        if [ $? -ne 0 ] ; then
          echo 'ERROR: Failed to stop NFS ID Mapper!'
          exit 1
        fi
      fi

      echo 'Checking if EFS mount directory exists...'
      if [ ! -d ${EFS_MOUNT_DIR} ]; then
        echo "Creating directory ${EFS_MOUNT_DIR} ..."
        mkdir -p ${EFS_MOUNT_DIR}
        if [ $? -ne 0 ]; then
          echo 'ERROR: Directory creation failed!'
          exit 1
        fi
      else
        echo "Directory ${EFS_MOUNT_DIR} already exists!"
      fi

      mountpoint -q ${EFS_MOUNT_DIR}
      if [ $? -ne 0 ]; then
        echo "mount -t efs -o tls ${EFS_MOUNT_POINT_SOURCE}:/ ${EFS_MOUNT_DIR}"
        mount -t efs -o tls ${EFS_MOUNT_POINT_SOURCE}:/ ${EFS_MOUNT_DIR}
        if [ $? -ne 0 ] ; then
          echo 'ERROR: Mount command failed!'
          exit 1
        fi
        chmod 777 ${EFS_MOUNT_DIR}
        runuser -l  ec2-user -c "touch ${EFS_MOUNT_DIR}/it_works"
        if [[ $? -ne 0 ]]; then
          echo 'ERROR: Permission Error!'
          exit 1
        else
          runuser -l  ec2-user -c "rm -f ${EFS_MOUNT_DIR}/it_works"
        fi
      else
        echo "Directory ${EFS_MOUNT_DIR} is already a valid mountpoint!"
      fi

      #TODO fix permissions, assume this script runs as root so ownership won't be a problem
      chown tomcat:root ${EFS_MOUNT_DIR}
      chmod 0770 ${EFS_MOUNT_DIR}

      echo 'EFS mount complete.'


  "/tmp/sysconfig.sh":
    mode: "000755"
    content: |
      #!/bin/bash

      export ENV_NAME="$(/opt/elasticbeanstalk/bin/get-config environment -k ENV_NAME)"
      S3_BUCKET="$(/opt/elasticbeanstalk/bin/get-config environment -k S3_BUCKET)"
      # Main app configuration directory
      mkdir -p /etc/easyvisa
      export AWS_REGION="us-west-2"

      # Copy main config file from S3
      # This will eventually be replaced with configuration entirely via Secrets Manager
      aws s3 cp s3://${S3_BUCKET}/connection.config  /etc/easyvisa/connection.config
      chown tomcat:tomcat /etc/easyvisa/connection.config
      chmod 0660 /etc/easyvisa/connection.config

      # No agents should run in production
      if [ $ENV_NAME != "prod" ]; then
        # Install and start Datadog Linux SERVER agent (required for Java/APM/profiler agent installation below)
        # It is safe to run again after installation, will skip any completed steps.
        # This installs it via a Yum package: https://app.datadoghq.com/account/settings#agent/aws
        DD_AGENT_MAJOR_VERSION=7 DD_API_KEY=$(aws secretsmanager get-secret-value --secret-id ${ENV_NAME}/dd-api-key --region $AWS_REGION| jq -r '.SecretString'|jq -r '.ddapikey') DD_SITE="datadoghq.com" bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script.sh)"

        # Install/configure Contrast Java agent
        mkdir -p /etc/contrast/java /opt/contrast/java
        # This requires JVM option:
        # -javaagent:/opt/contrast/java/contrast-agent.jar
        curl -L 'https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.contrastsecurity&a=contrast-agent&v=LATEST' -o /opt/contrast/java/contrast-agent.jar
        # This is the default/expected location for the config file.
        aws s3 cp s3://${S3_BUCKET}/contrast_security.yaml  /etc/contrast/java
        chown -R tomcat:root /etc/contrast /opt/contrast
        chmod 0550 /opt/contrast/java/contrast-agent.jar

        # Install/configure Datadog Java APM/Profiler agent.
        # This is NOT the Linux server agent and requires it to be already installed
        # Requires JVM options:
        # -javaagent:/opt/datadog-java/dd-java-agent.jar -Ddd.profiling.enabled=true -XX:FlightRecorderOptions=stackdepth=256 -Ddd.logs.injection=true -Ddd.service=api -Ddd.env=dev
        # https://app.datadoghq.com/apm/docs?architecture=host-based&language=java
        mkdir -p /opt/datadog-java
        wget -O /opt/datadog-java/dd-java-agent.jar 'https://dtdg.co/latest-java-tracer'
        chown -R tomcat:tomcat /opt/datadog-java
        chmod 0550 /opt/datadog-java/dd-java-agent.jar
      fi

      # Secure configuration
      chown -R tomcat:root /etc/easyvisa
      chmod o-rwx /etc/easyvisa
